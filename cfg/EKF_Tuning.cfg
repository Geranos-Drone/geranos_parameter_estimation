#!/usr/bin/env python
PACKAGE = "geranos_parameter_estimation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


################
### R Values ###
################
R_group = gen.add_group("R measurement coviariance matrix diagonal elements")
R_group.add("R_pos", double_t, 0,"variance position measurement ", 1e-4, 0.0, 1e-1)
R_group.add("R_vel", double_t, 0,"variance velocity measurement ", 1e-3, 0.0, 1e-1)
R_group.add("R_orient", double_t, 0,"variance orientation measurement ", 1e-3, 0.0, 1e-1)
R_group.add("R_angvel", double_t, 0,"variance angular velocity measurement ", 1e-2, 0.0, 1e-1)


################
### Q Values ###
################
Q_group = gen.add_group("Q process noise coviariance matrix diagonal elements")
Q_group.add("Q_pos", double_t, 0,"process noise position", 1e-2, 0.0, 1e1)
Q_group.add("Q_vel", double_t, 0,"process noise velocity", 1e-2, 0.0, 1e1)
Q_group.add("Q_orient", double_t, 0,"process noise orientation", 1e-2, 0.0, 1e1)
Q_group.add("Q_angvel", double_t, 0,"process noise angular velocity", 1e-2, 0.0, 1e1)
Q_group.add("Q_mass", double_t, 0,"process noise mass", 0.005, 0.0, 1e0)
Q_group.add("Q_Jxy", double_t, 0,"process noise inertia xy", 1e-5, 0.0, 1e-1)
Q_group.add("Q_Jz", double_t, 0,"process noise inertia z", 1e-2, 0.0, 1e1)
Q_group.add("Q_com", double_t, 0,"process noise inertia com", 1e-7, 0.0, 1e-2)

exit(gen.generate(PACKAGE, "Config", "EKF_Tuning"))
